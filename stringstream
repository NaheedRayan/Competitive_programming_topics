For further details visit
https://www.geeksforgeeks.org/stringstream-c-applications/


stringstream in C++ and its applications

A stringstream associates a string object with a stream allowing you to read from the string as if it were a stream (like cin).

Basic methods are –

clear() — to clear the stream
str() — to get and set string object whose content is present in stream.
operator << — add a string to the stringstream object.
operator >> — read something from the stringstream object,


stringstream class is extremely useful in parsing input.

Applications :

Count number of words in a string.
Examples:

Input : Asipu Pawan Kumar
Output : 3

Input : Geeks For Geeks Ide
Output : 4



// CPP program to count words in a string 
// using stringstream. 
#include <bits/stdc++.h> 
using namespace std; 
  
int countWords(string str) 
{ 
    // breaking input into word using string stream 
    stringstream s(str); // Used for breaking words 
    string word; // to store individual words 
  
    int count = 0; 
    while (s >> word) 
        count++; 
    return count; 
} 
  
// Driver code 
int main() 
{ 
    string s = "geeks for geeks geeks "
               "contribution placements"; 
    cout << " Number of words are: " << countWords(s); 
    return 0; 
} 


Output:
Number of words are: 6


Print frequencies of individual words in a string
Input : Geeks For Geeks Quiz Geeks Quiz Practice Practice
Output : For -> 1
         Geeks -> 3
         Practice -> 2
         Quiz -> 2

Input : Word String Frequency String
Output : Frequency -> 1
         String -> 2
         Word -> 1 


// CPP program to demonstrate use of stringstream 
// to count frequencies of words. 
#include <bits/stdc++.h> 
using namespace std; 
  
void printFrequency(string st) 
{ 
    // each word it mapped to it's frequency 
    map<string, int> FW; 
    stringstream ss(st); // Used for breaking words 
    string Word; // To store individual words 
  
    while (ss >> Word) 
        FW[Word]++; 
  
    map<string, int>::iterator m; 
    for (m = FW.begin(); m != FW.end(); m++) 
        cout << m->first << " -> "
             << m->second << "\n"; 
} 
  
// Driver code 
int main() 
{ 
    string s = "Geeks For Geeks Ide"; 
    printFrequency(s); 
    return 0; 
} 

Output:

For -> 1
Geeks -> 2
Ide -> 1

--------------------------------------------------------------------------------------------------------------------------------------

Converting Strings to Numbers in C/C++
There are two common methods to convert strings to numbers:

Using stringstream class or sscanf()
stringstream() : This is an easy way to convert strings of digits into ints, floats or doubles. 
Following is a sample program using a stringstream to convert string to int.


// A program to demonstrate the use of stringstream 
#include <iostream> 
#include <sstream> 
using namespace std; 
  
int main() 
{ 
    string s = "12345"; 
  
    // object from the class stringstream 
    stringstream geek(s); 
  
    // The object has the value 12345 and stream 
    // it to the integer x 
    int x = 0; 
    geek >> x; 
  
    // Now the variable x holds the value 12345 
    cout << "Value of x : " << x; 
  
    return 0; 
}
Output:

Value of x : 12345



String conversion using stoi() or atoi()
stoi() : The stoi() function takes a string as an argument and returns its value. Following is a simple implementation:


// C++ program to demonstrate working of stoi() 
// Work only if compiler supports C++11 or above. 
#include <iostream> 
#include <string> 
using namespace std; 
  
int main() 
{ 
    string str1 = "45"; 
    string str2 = "3.14159"; 
    string str3 = "31337 geek"; 
  
    int myint1 = stoi(str1); 
    int myint2 = stoi(str2); 
    int myint3 = stoi(str3); 
  
    cout << "stoi(\"" << str1 << "\") is "
         << myint1 << '\n'; 
    cout << "stoi(\"" << str2 << "\") is "
         << myint2 << '\n'; 
    cout << "stoi(\"" << str3 << "\") is "
         << myint3 << '\n'; 
  
    return 0; 
} 
Output:

stoi("45") is 45
stoi("3.14159") is 3
stoi("31337 geek") is 31337 
atoi() : The atoi() function takes a character array or string literal as an 
argument and returns its value. Following is a simple implementation:


// For C++11 above 
#include <iostream> 
#include <cstdlib> 
using namespace std; 
   
int main() 
{ 
    const char *str1 = "42"; 
    const char *str2 = "3.14159"; 
    const char *str3 = "31337 geek"; 
     
    int num1 = atoi(str1); 
    int num2 = atoi(str2); 
    int num3 = atoi(str3); 
    
    cout << "atoi(\"" << str1  
              << "\") is " << num1 << '\n'; 
    cout << "atoi(\"" << str2  
              << "\") is " << num2 << '\n'; 
    cout << "atoi(\"" << str3  
              << "\") is " << num3 << '\n'; 
     
   return 0; 
} 
Output:

atoi("42") is 42
atoi("3.14159") is 3
atoi("31337 geek") is 31337 

For more details:https://www.geeksforgeeks.org/converting-strings-numbers-cc/


-------------------------------------------------------------------------------------------------------------------------------------

Removing spaces from a string using Stringstream

Solution to removing spaces from a string is already posted here. In this article another solution using stringstream is discussed.

Algorithm

1. Enter the whole string into stringstream.
2. Empty the string.
3. Extract word by word and concatenate to the string.
Program 1: Using EOF.

// C++ program to remove spaces using stringstream 
#include <bits/stdc++.h> 
using namespace std; 
  
// Function to remove spaces 
string removeSpaces(string str) 
{ 
    stringstream ss; 
    string temp; 
  
    // Storing the whole string 
    // into string stream 
    ss << str; 
  
    // Making the string empty 
    str = ""; 
  
    // Running loop till end of stream 
    while (!ss.eof()) { 
  
        // Extracting word by word from stream 
        ss >> temp; 
  
        // Concatenating in the string to be 
        // returned 
        str = str + temp; 
    } 
    return str; 
} 
  
// Driver function 
int main() 
{ 
    // Sample Inputs 
    string s = "This is a test"; 
    cout << removeSpaces(s) << endl; 
  
    s = "geeks for geeks"; 
    cout << removeSpaces(s) << endl; 
  
    s = "geeks quiz is awsome!"; 
    cout << removeSpaces(s) << endl; 
  
    s = "I love     to     code"; 
    cout << removeSpaces(s) << endl; 
  
    return 0; 
} 
Output:
Thisisatest
geeksforgeeks
geeksquizisawsome!
Ilovetocode

Program 2: Using getline().

// C++ program to remove spaces using stringstream 
// and getline() 
#include <bits/stdc++.h> 
using namespace std; 
  
// Function to remove spaces 
string removeSpaces(string str) 
{ 
    // Storing the whole string 
    // into string stream 
    stringstream ss(str); 
    string temp; 
  
    // Making the string empty 
    str = ""; 
  
    // Running loop till end of stream 
    // and getting every word 
    while (getline(ss, temp, ' ')) { 
        // Concatenating in the string 
        // to be returned 
        str = str + temp; 
    } 
    return str; 
} 
// Driver function 
int main() 
{ 
    // Sample Inputs 
    string s = "This is a test"; 
    cout << removeSpaces(s) << endl; 
  
    s = "geeks for geeks"; 
    cout << removeSpaces(s) << endl; 
  
    s = "geeks quiz is awsome!"; 
    cout << removeSpaces(s) << endl; 
  
    s = "I   love     to     code"; 
    cout << removeSpaces(s) << endl; 
  
    return 0; 
} 
  
// Code contributed by saychakr13 
Output:
Thisisatest
geeksforgeeks
geeksquizisawsome!
Ilovetocode




For more details:https://www.geeksforgeeks.org/removing-spaces-string-using-stringstream/





