Time limit: 1.00 s Memory limit: 512 MB
You are given a DNA sequence: a string consisting of characters 
A, C, G, and T. Your task is to find the longest repetition in the sequence.
This is a maximum-length substring containing only one type of character.

Input

The only input line contains a string of n characters.

Output

Print one integer: the length of the longest repetition.

Constraints
1≤n≤10^6
Example

Input:
ATTCGGGA

Output:
3


Solution:

#include <bits/stdc++.h>
 
using namespace std;
 
int main()
{
    string s;
    cin >> s;
 
    int mx = 0;
    int cnt = 0;
    for (int i = 0; i < s.length(); i++)
    {
        if (s[i] == s[i + 1])
        {
            cnt++;
            mx = max(mx, cnt);
        }
        else
        {
            cnt = 0;
        }
    }
 
    cout << mx + 1 << endl;
}